name: Run Gradle on PRs
on:
  push:
    branches:
      - 'release*'
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PACKAGE }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build_and_release:
    name: Build and upload release
    needs: create_release
    strategy:
      matrix:
         os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: echo Current OS
        run: echo " currentOs = ${{ runner.os }}"

      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1

      # FIX: `./gradlew: Permission denied`
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        id: gradle-build
        run: ./gradlew packageReleaseDistributionForCurrentOS

      - run: pwd

      - name: Upload Linux Release Package
        id: upload_linux_release_asset
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PACKAGE }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/compose/binaries/main-release/deb/passwd_1.0.0-1_amd64.deb
          asset_name: ${{ github.event.repository.name }} ${{ github.ref_name }}.deb
          asset_content_type: application/zip

      - name: Upload Windows Release Package
        id: upload_windows_release_asset
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PACKAGE }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build\compose\binaries\main-release\msi\Passwd-1.0.0.msi
          asset_name: ${{ github.event.repository.name }} ${{ github.ref_name }}.msi
          asset_content_type: application/zip

      - name: Upload Macos Release Package
        id: upload_macos_release_asset
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PACKAGE }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/compose/binaries/main-release/dmg/Passwd-1.0.0.dmg
          asset_name: ${{ github.event.repository.name }} ${{ github.ref_name }}.dmg
          asset_content_type: application/zip
